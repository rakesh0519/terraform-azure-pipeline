trigger:
  - main  # Change this to your branch if needed

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self  # Fetch the pipeline YAML from Azure DevOps

  - checkout: git://github.com/<your-github-username>/<your-repo-name>@main  # Fetch Terraform code from GitHub

  - task: TerraformInstaller@0
    displayName: 'Install Terraform'
    inputs:
      terraformVersion: 'latest'

  - task: AzureCLI@2
    displayName: 'Azure CLI Login & Set Subscription'
    inputs:
      azureSubscription: 'AzureServiceConnection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -e  # Stop execution on error
        az login --identity || { echo "Azure login failed!"; exit 1; }
        az account set --subscription 'a9abbc1e-f3f3-4acd-94f0-81d6b4d5289a' || { echo "Subscription setting failed!"; exit 1; }
        echo "Azure authentication successful!"

  - script: |
      echo "Initializing Terraform..."
      terraform init
    workingDirectory: Terraform
    displayName: 'Terraform Init'

  - script: |
      echo "Validating Terraform Configuration..."
      terraform validate
    workingDirectory: Terraform
    displayName: 'Terraform Validate'

  - script: |
      echo "Running Terraform Plan..."
      terraform plan -out=tfplan
    workingDirectory: Terraform
    displayName: 'Terraform Plan'

  - script: |
      echo "Applying Terraform Changes..."
      terraform apply -auto-approve tfplan
    workingDirectory: Terraform
    displayName: 'Terraform Apply'
